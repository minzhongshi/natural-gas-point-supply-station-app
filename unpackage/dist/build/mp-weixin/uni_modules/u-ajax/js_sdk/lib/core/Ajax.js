"use strict";const e=require("./InterceptorManager.js"),r=require("../helpers/buildURL.js"),t=require("../helpers/mergeConfig.js"),s=require("./dispatchRequest.js"),n=require("./handleCancel.js"),i=require("../defaults.js"),u=require("../utils.js");exports.Ajax=function(o){function c(e,r,u){const a="string"==typeof e?{...u,url:e,data:r}:{...e},f=[s.dispatchRequest,n.dispatchCancel];c.interceptors.request.forEach((({fulfilled:e,rejected:r})=>f.unshift(e,r)),!0),c.interceptors.response.forEach((({fulfilled:e,rejected:r})=>f.push(e,n.interceptCancel(r))),!1),f.unshift((e=>t.mergeConfig(i.defaults,o,e)),void 0),f.push(void 0,n.detachCancel);let l=Promise.resolve(a);for(;f.length;)l=l.then(f.shift(),f.shift());return l}return c.config=Object.freeze("object"==typeof o?u.merge(o):o),c.defaults=i.defaults,c.interceptors={request:new e.InterceptorManager,response:new e.InterceptorManager},c.getURL=async function(e){const s=await t.mergeConfig(i.defaults,o,e);return r.buildURL(s).replace(/^\?/,"")},u.forEach(i.METHOD,(e=>{c[e]=function(r,t,s){return"string"==typeof r?c(r,t,{...s,method:e}):c({...r,method:e})}})),c};
